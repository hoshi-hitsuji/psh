type DeviceType {
  id: ID
  name: String
  type: String
}

type Device {
  alias: String
  home: Home
  id: ID
  lastOnline: String
  online: Boolean
  owner: User
  private: Boolean
  status: String
  type: DeviceType
}

type User {
  devices: [Device]
  email: String
  home: Home
  id: ID
  roles: Roles
  terms: Terms
  username: String
}

type Roles {
  admin: Boolean
}

type Terms {
  agelimit: Boolean
  privacy: Boolean
  promotion: Boolean
  usepolicy: Boolean
}

type Home {
  admins: [User]
  devices: [Device]
  family: [User]
  id: ID
  name: String
}

input NewDeviceInput {
  alias: String!
  id: String!
  private: Boolean!
  type: String!
}

type Session {
  access_token: ID!
  user: User
}

input NewUserInput {
  agelimit: Boolean!
  email: String!
  password: String!
  privacy: Boolean!
  promotion: Boolean!
  usepolicy: Boolean!
  username: String!
}

input SignInUserInput {
  email: String!
  password: String!
}

type Query {
  user(id: ID!): User
  me: User
  deviceTypes: [DeviceType]
}

type Mutation {
  newUser(user: NewUserInput!): Session
  signInUser(user: SignInUserInput!): Session
  newHome(name: String!): Home
  joinHome(home: String!): Home
  newDevice(device: NewDeviceInput!): Device
  deleteDevice(id: ID): Device
  tnid: ID
}
